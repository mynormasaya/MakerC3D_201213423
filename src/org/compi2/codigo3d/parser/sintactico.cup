package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER;
terminal TokenC3D IGUAL, DIFERENTE, MAYORQ, MENORQ, MAYORI, MENORI;
terminal TokenC3D ANDLOG, ORLOG, NOTLOG ;
nonterminal NodoC3D inicial, expresion,logicas;



precedence left ORLOG;

precedence left ANDLOG;

precedence right NOTLOG;

precedence left  DIFERENTE, MAYORQ, MENORQ,MAYORI, MENORI,IGUAL;

precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT;  

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} logicas:exp 
                    {: 
                        String cad;
                        cad = exp.getCad();
                        String etv1 = ControlC3D.generarLabelfinal();
                        
                        cad = cad +"\n"+ControlC3D.DevolverTEVERDADERAS()+"\n"+"VERDADERAS:"+"\n"+"goto: "+etv1+"\n";
                        cad = cad +"\n"+ControlC3D.DevolverTEFALSAS()+"\n"+"FALSAS:"+"\n"+ etv1 + ":";
                        NodoC3D resultado = new NodoC3D(cad,false) ;
                        RESULT =resultado;
                        ControlC3D.agregarC3D("\n"+resultado.getCad());
                    :};

logicas   ::=

            |logicas:izq ORLOG logicas:der
                    {: 

                        if(ControlC3D.verificarStack()){
                            String etv1 = ControlC3D.generaLabelVerdadero();
                            String etf1 = ControlC3D.generaLabelFalso();
                            String c3d = "if "+ izq.getCad()+" then goto "+etv1 +"\n"+"goto " + etf1  ;
                            c3d = c3d + "\n" + ControlC3D.popFalso()+":"+"\n";
                            

                            etv1 = ControlC3D.generaLabelVerdadero();
                            etf1 = ControlC3D.generaLabelFalso();
                            

                            c3d = c3d + "if "+ der.getCad()+" then goto "+etv1 +"\n"+"goto " + etf1  ;
                            NodoC3D res = new NodoC3D(c3d,false); 
                            RESULT = res;
                             
                            }else{
                            String c3d;
                            if(izq.getver()){
                            
                            c3d = izq.getCad()+"\n";
                            c3d = c3d + ControlC3D.DevolverTEFALSAS() +"\n";
                            String etv1 = ControlC3D.generaLabelVerdadero();
                            String etf1 = ControlC3D.generaLabelFalso();
                            c3d = c3d+"if "+ der.getCad()+" then goto "+etv1 +"\n"+"goto " + etf1  ;
                            NodoC3D res = new NodoC3D(c3d,true); 
                            RESULT = res;
                            
                            
                            
                            
                                }else{
                             
                            c3d = izq.getCad()+"\n";
                            c3d = c3d + ControlC3D.DevolverTEFALSAS() +"\n";
                            String etv1 = ControlC3D.generaLabelVerdadero();
                            String etf1 = ControlC3D.generaLabelFalso();
                            c3d = c3d+"if "+ der.getCad()+" then goto "+etv1 +"\n"+"goto " + etf1  ;
                            NodoC3D res = new NodoC3D(c3d,false); 
                            RESULT = res;


                                
                            }
                            

                            }



                        
                    :}

            |logicas:izq ANDLOG logicas:der
                    {: 
                        if(ControlC3D.verificarStack()){
                            String etv1 = ControlC3D.generaLabelVerdadero();
                            String etf1 = ControlC3D.generaLabelFalso();
                            String c3d = "if "+ izq.getCad()+" then goto "+etv1 +"\n"+"goto " + etf1  ;
                            c3d = c3d + "\n" + ControlC3D.popVerdadero()+":"+"\n";
                            

                            etv1 = ControlC3D.generaLabelVerdadero();
                            etf1 = ControlC3D.generaLabelFalso();
                            

                            c3d = c3d + "if "+ der.getCad()+" then goto "+etv1 +"\n"+"goto " + etf1  ;
                            NodoC3D res = new NodoC3D(c3d,true); 
                            RESULT = res;
                             
                            }else{
                            String c3d;
                            if(izq.getver()){
                            
                            c3d = izq.getCad()+"\n";
                            c3d = c3d + ControlC3D.DevolverTEVERDADERAS() +"\n";
                            String etv1 = ControlC3D.generaLabelVerdadero();
                            String etf1 = ControlC3D.generaLabelFalso();
                            c3d = c3d+"if " +der.getCad()+" then goto "+etv1 +"\n"+"goto " + etf1  ;
                            NodoC3D res = new NodoC3D(c3d,true); 
                            RESULT = res;
                            
                            
                            
                            
                                }else{
                             
                            c3d = izq.getCad()+"\n";
                            c3d = c3d + ControlC3D.DevolverTEVERDADERAS() +"\n";
                            String etv1 = ControlC3D.generaLabelVerdadero();
                            String etf1 = ControlC3D.generaLabelFalso();
                            c3d = c3d+"if "+ der.getCad()+" then goto "+etv1 +"\n"+"goto " + etf1  ;
                            NodoC3D res = new NodoC3D(c3d,true); 
                            RESULT = res;


                                
                            }
                            

                            } 
                    :}



|expresion:izq IGUAL expresion:der
                    {: 
                        
                        String c3d = izq.getCad() + "==" + der.getCad() + " ";
                        
                        RESULT = new NodoC3D(c3d); 
                    :}

|expresion:izq DIFERENTE expresion:der
                    {: 
                        
                        String c3d = izq.getCad() + "!=" + der.getCad() + " ";
                        
                        RESULT = new NodoC3D(c3d); 
                    :}
|expresion:izq MAYORQ expresion:der
                    {: 
                        
                        String c3d = izq.getCad() + ">" + der.getCad() + " ";
                        
                        RESULT = new NodoC3D(c3d); 
                    :}
|expresion:izq MENORQ expresion:der
                    {: 
                        
                        String c3d = izq.getCad() + "<" + der.getCad() + " ";
                        
                        RESULT = new NodoC3D(c3d); 
                    :}
|expresion:izq MAYORI expresion:der
                    {: 
                        
                        String c3d =izq.getCad() + ">=" + der.getCad() + " ";
                        
                        RESULT = new NodoC3D(c3d); 
                    :}

|expresion:izq MENORI expresion:der
                    {: 
                      
                        String c3d = izq.getCad() + "<=" + der.getCad() + " ";
                        
                        RESULT = new NodoC3D(c3d); 
                    :}


            |NOTLOG expresion:der
                    {: 
                        NodoC3D resultado = der;
                        ControlC3D.IntercambioEtiquetas();
                        RESULT = resultado; 
                    :}
            |NOTLOG logicas:der
                    {: 
                        NodoC3D resultado = der;
                        ControlC3D.IntercambioEtiquetas();
                        RESULT = resultado; 
                    :};

            
            


  expresion::=  expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() +" " ;
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() +" " ;
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad()+" "  ;
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() +" "  ;
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() +" "  ;
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() +" " ;
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   PAR_IZQ logicas:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;





